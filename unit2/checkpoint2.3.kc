import "string"
#pragma link("mega65hyper.ld")
const char* RASTER = 0xd012;
const char* VIC_MEMORY = 0xd018;
const char* SCREEN = 0x0400;
const char* BGCOL = 0xd021;
const char* COLS = 0xd800;
const char BLACK = 0;
const char BLUE = 6;
const char WHITE = 1;

char[] MESSAGE = "checkpoint 2.3 liew0093";

void main(){
	*VIC_MEMORY = 0x14;
	memset(SCREEN,' ',40*25);
	memset(COLS,WHITE,40*25);
	char* sc = SCREEN+40;
	char* msg= MESSAGE;
	while(*msg){
	  *sc++=*msg++;
	}
	while(true){
	  if(*RASTER==54 || *RASTER==66){
	    *BGCOL = WHITE;
	  } else {
	    *BGCOL=BLUE;
	  }
	}
}
void exit_hypervisor()
{
	//Trigger exit from Hypervisor mode
	*(unsigned char *)$D67F = $01;
}


void RESET(){
	*VIC_MEMORY = 0x14;
	memset(SCREEN,' ',40*25);
	memset(COLS,WHITE,40*25);
	char* sc = SCREEN+40;
	char* msg= MESSAGE;
	while(*msg){
	  *sc++=*msg++;
	}
	while(true){
	  if(*RASTER==54 || *RASTER==66){
	    *BGCOL = WHITE;
	  } else {
	    *BGCOL=BLUE;
	  }
	}
}

void undefined_trap(){
}


#pragma data_seg(Syscall)
struct Syscall{
  char xjmp;
  void()*syscall;
  char xnop;
};
const char JMP = 0x4c;
const char NOP = 0xea;

export struct Syscall[]SYSCALLS = {
 {JMP, &SYSCALL00, NOP},
 {JMP, &SYSCALL01, NOP},
 {JMP, &SYSCALL02, NOP},
 {JMP, &SYSCALL03, NOP},
 {JMP, &SYSCALL04, NOP},
 {JMP, &SYSCALL05, NOP},
 {JMP, &SYSCALL06, NOP},
 {JMP, &SYSCALL07, NOP},
 {JMP, &SYSCALL08, NOP},
 {JMP, &SYSCALL09, NOP},
 {JMP, &SYSCALL0A, NOP},
 {JMP, &SYSCALL0B, NOP},
 {JMP, &SYSCALL0C, NOP},
 {JMP, &SYSCALL0D, NOP},
 {JMP, &SYSCALL0E, NOP},
 {JMP, &SYSCALL0F, NOP},
 {JMP, &SYSCALL10, NOP},
 {JMP, &SECURENTR, NOP},
 {JMP, &SECUREXIT, NOP},
 {JMP, &SYSCALL13, NOP},
 {JMP, &SYSCALL14, NOP},
 {JMP, &SYSCALL15, NOP},
 {JMP, &SYSCALL16, NOP},
 {JMP, &SYSCALL17, NOP},
 {JMP, &SYSCALL18, NOP},
 {JMP, &SYSCALL19, NOP},
 {JMP, &SYSCALL1A, NOP},
 {JMP, &SYSCALL1B, NOP},
 {JMP, &SYSCALL1C, NOP},
 {JMP, &SYSCALL1D, NOP},
 {JMP, &SYSCALL1E, NOP},
 {JMP, &SYSCALL1F, NOP},
 {JMP, &SYSCALL20, NOP},
 {JMP, &SYSCALL21, NOP},
 {JMP, &SYSCALL22, NOP},
 {JMP, &SYSCALL23, NOP},
 {JMP, &SYSCALL24, NOP},
 {JMP, &SYSCALL25, NOP},
 {JMP, &SYSCALL26, NOP},
 {JMP, &SYSCALL27, NOP},
 {JMP, &SYSCALL28, NOP}, 
 {JMP, &SYSCALL29, NOP},
 {JMP, &SYSCALL2A, NOP},
 {JMP, &SYSCALL2B, NOP},
 {JMP, &SYSCALL2C, NOP},
 {JMP, &SYSCALL2D, NOP},
 {JMP, &SYSCALL2E, NOP},
 {JMP, &SYSCALL2F, NOP},
 {JMP, &SYSCALL30, NOP},
 {JMP, &SYSCALL31, NOP},
 {JMP, &SYSCALL32, NOP},
 {JMP, &SYSCALL33, NOP},
 {JMP, &SYSCALL34, NOP},
 {JMP, &SYSCALL35, NOP},
 {JMP, &SYSCALL36, NOP},
 {JMP, &SYSCALL37, NOP},
 {JMP, &SYSCALL38, NOP},
 {JMP, &SYSCALL39, NOP},
 {JMP, &SYSCALL3A, NOP},
 {JMP, &SYSCALL3B, NOP},
 {JMP, &SYSCALL3C, NOP},
 {JMP, &SYSCALL3D, NOP},
 {JMP, &SYSCALL3E, NOP},
 {JMP, &SYSCALL3F, NOP}
 //64//    


};

export align(0x100) struct Syscall[] TRAPS= {
 {JMP, &RESET, NOP},
 {JMP, &PAGFAULT, NOP},
 {JMP, &RESTORKEY, NOP},
 {JMP, &ALTTABKEY, NOP},
 {JMP, &VF011RD, NOP},
 {JMP, &VF011WR, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &CPUKIL, NOP},
//48 entries//
exit_hypervisor
};

	
	    
