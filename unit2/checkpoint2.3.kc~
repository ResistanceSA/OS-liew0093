import "string"
#pragma link("mega65hyper.ld")
const char* RASTER = 0xd012;
const char* VIC_MEMORY = 0xd018;
const char* SCREEN = 0x0400;
const char* BGCOL = 0xd021;
const char* COLS = 0xd800;
const char BLACK = 0;
const char BLUE = 6;
const char WHITE = 1;

char[] MESSAGE = "checkpoint 2.3 liew0093";

void main(){
	*VIC_MEMORY = 0x14;
	memset(SCREEN,' ',40*25);
	memset(COLS,WHITE,40*25);
	char* sc = SCREEN+40;
	char* msg= MESSAGE;
	while(*msg){
	  *sc++=*msg++;
	}
	while(true){
	  if(*RASTER==54 || *RASTER==66){
	    *BGCOL = WHITE;
	  } else {
	    *BGCOL=BLUE;
	  }
	}}

void exit_hypervisor()
{
	//Trigger exit from Hypervisor mode
	*(unsigned char *)$D67F = $01;
}


void SYSCALL00(){ *(SCREEN+79)= ')';}
void SYSCALL01(){ *(SCREEN+79)= ')';}
void SYSCALL02(){ *(SCREEN+79)= ')';}
void SYSCALL03(){ *(SCREEN+79)= ')';}
void SYSCALL04(){ *(SCREEN+79)= ')';}
void SYSCALL05(){ *(SCREEN+79)= ')';}
void SYSCALL06(){ *(SCREEN+79)= ')';}
void SYSCALL07(){ *(SCREEN+79)= ')';}
void SYSCALL08(){ *(SCREEN+79)= ')';}
void SYSCALL09(){ *(SCREEN+79)= ')';}
void SYSCALL0A(){ *(SCREEN+79)= ')';}
void SYSCALL0B(){ *(SCREEN+79)= ')';}
void SYSCALL0C(){ *(SCREEN+79)= ')';}
void SYSCALL0D(){ *(SCREEN+79)= ')';}
void SYSCALL0E(){ *(SCREEN+79)= ')';}
void SYSCALL0F(){ *(SCREEN+79)= ')';}
void SYSCALL10(){ *(SCREEN+79)= ')';}
void SECURENTR(){ *(SCREEN+79)= ')';}
void SECUREXIT(){ *(SCREEN+79)= ')';}
void SYSCALL13(){ *(SCREEN+79)= ')';}
void SYSCALL14(){ *(SCREEN+79)= ')';}
void SYSCALL15(){ *(SCREEN+79)= ')';}
void SYSCALL16(){ *(SCREEN+79)= ')';}
void SYSCALL17(){ *(SCREEN+79)= ')';}
void SYSCALL18(){ *(SCREEN+79)= ')';}
void SYSCALL19(){ *(SCREEN+79)= ')';}
void SYSCALL1A(){ *(SCREEN+79)= ')';}
void SYSCALL1B(){ *(SCREEN+79)= ')';}
void SYSCALL1C(){ *(SCREEN+79)= ')';}
void SYSCALL1D(){ *(SCREEN+79)= ')';}
void SYSCALL1E(){ *(SCREEN+79)= ')';}
void SYSCALL1F(){ *(SCREEN+79)= ')';}
void SYSCALL20(){ *(SCREEN+79)= ')';}
void SYSCALL21(){ *(SCREEN+79)= ')';}
void SYSCALL22(){ *(SCREEN+79)= ')';}
void SYSCALL23(){ *(SCREEN+79)= ')';}
void SYSCALL24(){ *(SCREEN+79)= ')';}
void SYSCALL25(){ *(SCREEN+79)= ')';}
void SYSCALL26(){ *(SCREEN+79)= ')';}
void SYSCALL27(){ *(SCREEN+79)= ')';}
void SYSCALL28(){ *(SCREEN+79)= ')';}
void SYSCALL29(){ *(SCREEN+79)= ')';}
void SYSCALL2A(){ *(SCREEN+79)= ')';}
void SYSCALL2B(){ *(SCREEN+79)= ')';}
void SYSCALL2C(){ *(SCREEN+79)= ')';}
void SYSCALL2D(){ *(SCREEN+79)= ')';}
void SYSCALL2E(){ *(SCREEN+79)= ')';}
void SYSCALL2F(){ *(SCREEN+79)= ')';}
void SYSCALL30(){ *(SCREEN+79)= ')';}
void SYSCALL31(){ *(SCREEN+79)= ')';}
void SYSCALL32(){ *(SCREEN+79)= ')';}
void SYSCALL33(){ *(SCREEN+79)= ')';}
void SYSCALL34(){ *(SCREEN+79)= ')';}
void SYSCALL35(){ *(SCREEN+79)= ')';}
void SYSCALL36(){ *(SCREEN+79)= ')';}
void SYSCALL37(){ *(SCREEN+79)= ')';}
void SYSCALL38(){ *(SCREEN+79)= ')';}
void SYSCALL39(){ *(SCREEN+79)= ')';}
void SYSCALL3A(){ *(SCREEN+79)= ')';}
void SYSCALL3B(){ *(SCREEN+79)= ')';}
void SYSCALL3C(){ *(SCREEN+79)= ')';}
void SYSCALL3D(){ *(SCREEN+79)= ')';}
void SYSCALL3E(){ *(SCREEN+79)= ')';}
void SYSCALL3F(){ *(SCREEN+79)= ')';}
void RESET(){
	*VIC_MEMORY = 0x14;
	memset(SCREEN,' ',40*25);
	memset(COLS,WHITE,40*25);
	char* sc = SCREEN+40;
	char* msg= MESSAGE;
	while(*msg){
	  *sc++=*msg++;
	}
	while(true){
	  if(*RASTER==54 || *RASTER==66){
	    *BGCOL = WHITE;
	  } else {
	    *BGCOL=BLUE;
	  }
	}
}

void PAGFAULT(){ *(SCREEN+79)= ')';}
void RESTORKEY(){ *(SCREEN+79)= ')';}
void ALTTABKEY(){ *(SCREEN+79)= ')';}
void VF011RD(){ *(SCREEN+79)= ')';}
void VF011WR(){ *(SCREEN+79)= ')';}
void RESERVED(){ *(SCREEN+79)= ')';}
void CPUKIL(){ *(SCREEN+79)= ')';}
void undefined_trap(){ *(SCREEN+79)= ')';}
 
#pragma data_seg(Syscall)
struct Syscall{
  char xjmp;
  void()*syscall;
  char xnop;
};
const char JMP = 0x4c;
const char NOP = 0xea;

export struct Syscall[]SYSCALLS = {
 {JMP, &SYSCALL00, NOP},
 {JMP, &SYSCALL01, NOP},
 {JMP, &SYSCALL02, NOP},
 {JMP, &SYSCALL03, NOP},
 {JMP, &SYSCALL04, NOP},
 {JMP, &SYSCALL05, NOP},
 {JMP, &SYSCALL06, NOP},
 {JMP, &SYSCALL07, NOP},
 {JMP, &SYSCALL08, NOP},
 {JMP, &SYSCALL09, NOP},
 {JMP, &SYSCALL0A, NOP},
 {JMP, &SYSCALL0B, NOP},
 {JMP, &SYSCALL0C, NOP},
 {JMP, &SYSCALL0D, NOP},
 {JMP, &SYSCALL0E, NOP},
 {JMP, &SYSCALL0F, NOP},
 {JMP, &SYSCALL10, NOP},
 {JMP, &SECURENTR, NOP},
 {JMP, &SECUREXIT, NOP},
 {JMP, &SYSCALL13, NOP},
 {JMP, &SYSCALL14, NOP},
 {JMP, &SYSCALL15, NOP},
 {JMP, &SYSCALL16, NOP},
 {JMP, &SYSCALL17, NOP},
 {JMP, &SYSCALL18, NOP},
 {JMP, &SYSCALL19, NOP},
 {JMP, &SYSCALL1A, NOP},
 {JMP, &SYSCALL1B, NOP},
 {JMP, &SYSCALL1C, NOP},
 {JMP, &SYSCALL1D, NOP},
 {JMP, &SYSCALL1E, NOP},
 {JMP, &SYSCALL1F, NOP},
 {JMP, &SYSCALL20, NOP},
 {JMP, &SYSCALL21, NOP},
 {JMP, &SYSCALL22, NOP},
 {JMP, &SYSCALL23, NOP},
 {JMP, &SYSCALL24, NOP},
 {JMP, &SYSCALL25, NOP},
 {JMP, &SYSCALL26, NOP},
 {JMP, &SYSCALL27, NOP},
 {JMP, &SYSCALL28, NOP}, 
 {JMP, &SYSCALL29, NOP},
 {JMP, &SYSCALL2A, NOP},
 {JMP, &SYSCALL2B, NOP},
 {JMP, &SYSCALL2C, NOP},
 {JMP, &SYSCALL2D, NOP},
 {JMP, &SYSCALL2E, NOP},
 {JMP, &SYSCALL2F, NOP},
 {JMP, &SYSCALL30, NOP},
 {JMP, &SYSCALL31, NOP},
 {JMP, &SYSCALL32, NOP},
 {JMP, &SYSCALL33, NOP},
 {JMP, &SYSCALL34, NOP},
 {JMP, &SYSCALL35, NOP},
 {JMP, &SYSCALL36, NOP},
 {JMP, &SYSCALL37, NOP},
 {JMP, &SYSCALL38, NOP},
 {JMP, &SYSCALL39, NOP},
 {JMP, &SYSCALL3A, NOP},
 {JMP, &SYSCALL3B, NOP},
 {JMP, &SYSCALL3C, NOP},
 {JMP, &SYSCALL3D, NOP},
 {JMP, &SYSCALL3E, NOP},
 {JMP, &SYSCALL3F, NOP},
exit_hypervisor()

};

export align(0x100) struct Syscall[] TRAPS ={
 {JMP, &main, NOP},
 {JMP, &PAGFAULT, NOP},
 {JMP, &RESTORKEY, NOP},
 {JMP, &ALTTABKEY, NOP},
 {JMP, &VF011RD, NOP},
 {JMP, &VF011WR, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &undefined_trap, NOP},
 {JMP, &CPUKIL, NOP},
exit_hypervisor()
};
